[project]
name = "verity-backend"
version = "0.1.0"
description = "UXR Platform Backend"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.117.1",
    "httpx>=0.28.1",
    "pydantic>=2.11.9",
    "pydantic-settings>=2.11.0",
    "pytest>=8.4.2",
    "pytest-bdd>=8.1.0",
    "ruff>=0.13.2",
    "ty>=0.0.1a21",
    "uvicorn[standard]>=0.37.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "psycopg[binary]>=3.1.0",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.6",
    "firebase-admin>=6.2.0",
    "requests>=2.31.0",
    "minio>=7.2.0",
    "scalar-fastapi>=1.4.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v"

[tool.ruff]
line-length = 100
target-version = "py312"
src = ["src", "tests"]

[tool.ruff.lint]
# Enable comprehensive linting rules
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "ANN", # flake8-annotations (type hints)
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ICN", # flake8-import-conventions
    "PIE", # flake8-pie
    "PYI", # flake8-pyi
    "RSE", # flake8-raise
    "RUF", # ruff-specific
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    # No longer need ANN101/ANN102 as they were removed from ruff
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["ANN201", "ANN001", "ANN401"]  # Allow missing types and Any in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ty]
# Use ty defaults - configuration will be added as needed
